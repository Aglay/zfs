#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2017 by Lawrence Livermore National Security, LLC.
# Use is subject to license terms.
#

. $STF_SUITE/include/libtest.shlib
. $STF_SUITE/tests/functional/mmp/mmp.cfg


function check_pool_import # dir token keyword
{
	typeset dir=${1:-$MMP_DIR}
	typeset pool=${2:-$MMP_POOL}
	typeset token=$3
	typeset keyword=$4

	zpool import -d $dir 2>&1 | \
	    nawk -v token="$token:" '($1==token) {print $0}' | \
	    grep -i "$keyword" > /dev/null 2>&1

	return $?
}

function is_pool_imported # dir pool
{
	typeset dir=${1:-$MMP_DIR}
	typeset pool=${2:-$MMP_POOL}

	check_pool_import "$dir" "$pool" "status" \
	    "The pool is currently imported"
	return $?
}

function wait_pool_imported # dir pool
{
	typeset dir=${1:-$MMP_DIR}
	typeset pool=${2:-$MMP_POOL}

	while is_pool_imported $dir $pool; do
		log_must sleep 5
	done

	return 0
}

function try_pool_import # dir pool args message
{
	typeset dir=${1:-$MMP_DIR}
	typeset pool=${2:-$MMP_POOL}
	typeset args=$3
	typeset msg=$4

	zpool import $args -d $MMP_DIR $MMP_POOL 2>&1 | grep -i "$msg"

	return $?
}

function mmp_pool_create # dir pool
{
	typeset dir=${1:-$MMP_DIR}
	typeset pool=${2:-$MMP_POOL}
	typeset opts="-T120 -M -k0 -f $dir -E -p $pool"

	log_must mkdir -p $dir
	log_must truncate -s $MINVDEVSIZE $dir/vdev1 $dir/vdev2

	log_must set_spl_tunable spl_hostid $SPL_HOSTID1
	log_must zpool create -f $pool mirror $dir/vdev1 $dir/vdev2
	log_must zpool set safeimport=on $pool
	log_must zpool export $pool

	log_note "Starting ztest in the background"
	log_must eval "ZFS_HOSTID=$SPL_HOSTID1 ztest $opts >/dev/null 2>&1 &"
	log_must pgrep ztest

	sleep 5

#	XXX-VERIFY3(rvd->vdev_children == mrvd->vdev_children) failed (2 == 3)
#	zfs_ioc_pool_tryimport -> spa_tryimport -> spa_load -> spa_config_valid
#
#	while ! is_pool_imported $dir $pool; do
#		sleep 1
#	done
}

function mmp_pool_destroy # dir pool
{
	typeset dir=${1:-$MMP_DIR}
	typeset pool=${2:-$MMP_POOL}

	ZTESTPID=$(pgrep ztest)
	if [ -n "$ZTESTPID" ]; then
		log_must kill $ZTESTPID
		wait $ZTESTPID
	fi

	if poolexists $pool; then
		destroy_pool $pool
        fi

	rm -Rf $dir
	set_spl_tunable spl_hostid $SPL_HOSTID_DEFAULT
}
